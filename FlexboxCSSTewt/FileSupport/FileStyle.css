@charset "UTF-8";
* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
	border: 0 solid transparent;
	font-size: 100%;
	font-weight: normal;
	font-style: normal;
	list-style: none;
}

*::after, *::before {
	box-sizing: inherit;
}

body, html {
	margin: 0;
	padding: 0;
	background-color: transparent;
}

body {
	line-height: 1.4;
	color: #444;
	font-family: -apple-system, 'BlinkMacSystemFont', Helvetica, Roboto, Sans-Serif;
	font-size: 12px;
	-webkit-user-select: none;
	-webkit-text-size-adjust: none;
}

a {
	-webkit-touch-callout: none;
}

a:active, a:focus, a:hover, a:link, a:visited {
	text-decoration: none;
}

b, em, strong {
	font-weight: bold;
}

/* Flex Container */

.FlexContainer {
	overflow: hidden;
	background-color: #ffffff;
	display: -webkit-box;
	display: flex;
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	flex-direction: column;
}

.FlexContainer .BlockBody, .FlexContainer .BlockFooter,
.FlexContainer .BlockHeader, .FlexContainer .BlockHero {
	display: inherit;
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	flex-direction: column;
}

.FlexContainer .BlockBody>div, .FlexContainer .BlockFooter>div,
.FlexContainer .BlockHeader>div, .FlexContainer .BlockHero>div {
	flex-basis: auto;
}

.FlexContainer .BlockHero:first-child .ImageType.ExFull>div>a>span,
.FlexContainer .BlockHero:last-child .ImageType.ExFull>div>a>span {
	overflow: hidden;
}

.FlexSizeGiga {}
.FlexSizeMega {}
.FlexSizeKilo {}
.FlexSizeMicro {}
.FlexSizeNano {}

.FlexSizeGiga .FlexContainer .BlockHeader>.BoxType,
 .FlexSizeMega .FlexContainer .BlockHeader>.BoxType{
	padding: 20px
}

.FlexSizeKilo .FlexContainer .BlockHeader>.BoxType{
	padding: 13px
}

.FlexSizeMicro .FlexContainer .BlockHeader>.BoxType,
.FlexSizeNano .FlexContainer .BlockHeader>.BoxType{
	padding: 10px
}

.FlexSizeGiga .FlexContainer .BlockBody>.BoxType,
.FlexSizeMega .FlexContainer .BlockBody>.BoxType{
	padding: 20px;
	padding-top: 19px;
}

.FlexSizeKilo .FlexContainer .BlockHeader>.BoxType{
   padding: 13px;
}

.FlexSizeMicro .FlexContainer .BlockHeader>.BoxType,
.FlexSizeNano .FlexContainer .BlockHeader>.BoxType{
   padding: 10px;
}

.FlexContainer .BlockBody.HasFooter>.BoxType {
	padding-bottom: 10px
}

.FlexContainer .BlockFooter>.BoxType {
	padding: 10px
}

.FlexLTR, [dir="ltr"] {
	direction: ltr
}

.FlexRTL, [dir="rtl"] {
	direction: rtl
}

.ButtonType, .BoxType, .IconType, .ImageType, .TextType, [class*="SeparatorType"] {
	display: -webkit-box;
	display: flex;
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	flex-direction: column;
	-webkit-box-flex: 1;
	flex: 1 0 0;
	min-width: 0;
	max-width: 100%
}

@media (-webkit-min-device-pixel-ratio: 1) {
	.ButtonType, .BoxType, .IconType, .ImageType, .TextType, [class*="SeparatorType"] {
		width: 0
	}
}

@media (-webkit-min-device-pixel-ratio: 1) and (min-width: 0.001vmax) {
	.ButtonType, .BoxType, .IconType, .ImageType, .TextType, [class*="SeparatorType"] {
		width: auto
	}
}

@media (min-resolution: 1dpi) {
	.ButtonType, .BoxType, .IconType, .ImageType, .TextType, [class*="SeparatorType"]{
		width: auto
	}
}

/* Box Properties */

.BoxType {
	overflow: hidden;
	position: relative
}

.BoxType.vertical>div {
	-webkit-box-flex: 0;
	flex: none;
	flex-basis: auto
}

.BoxType.horizontal {
	-webkit-box-orient: horizontal;
	-webkit-box-direction: normal;
	flex-direction: row;
	width: 100%
}

.BoxType.horizontal>div {
	overflow: hidden;
	-webkit-box-flex: 1;
	flex: 1 0 0
}

.BoxType.horizontal.baseline {
	-webkit-box-align: baseline;
	align-items: baseline
}

/* BoxType Margin (BoxType is horizontal)  */

.BoxType.horizontal>div.BoxType.BoxTypeMargin {
	margin-left: var(--box-type-margin-value)!important;
}

/* BoxType Margin (BoxType is vertical) */

.BoxType.vertical>div.BoxType.BoxTypeMargin {
	margin-top: var(--box-type-margin-value)!important;
}

/* Box Position */

.BoxType.horizontal>div.PositionAbsolute {
	width: auto
}

.BoxType.horizontal.PositionAbsolute {
	width: auto
}

.BoxType.horizontal.PositionAbsolute>div {
	width: auto
}

.PositionAbsolute .BoxType.horizontal {
	width: auto
}

.PositionAbsolute .BoxType.horizontal>div {
	width: auto
}

/* BoxType Spacing */

.FlexContainer .BoxType.horizontal.BoxTypeSpacing>div {
	margin-left: var(--box-type-spacing-value)
}

.FlexContainer .BoxType.horizontal.BoxTypeSpacing>div:first-child {
	margin-left: 0px;
}

/* Box  justifyContent */

.BoxType.justifyContentStart {
	-webkit-box-pack: start;
	justify-content: flex-start
}

.BoxType.justifyContentEnd {
	-webkit-box-pack: end;
	justify-content: flex-end
}

.BoxType.justifyContentCenter {
	-webkit-box-pack: center;
	justify-content: center
}

.BoxType.justifyContentSpaceBetween {
	-webkit-box-pack: justify;
	justify-content: space-between
}

.BoxType.justifyContentSpaceAround {
	justify-content: space-around
}

.BoxType.justifyContentSpaceEvenly{
	justify-content: space-evenly
}

/* Box  alignItems */

.BoxType.alignItemsStart {
	-webkit-box-align: start;
	align-items: flex-start
}

.BoxType.alignItemsEnd {
	-webkit-box-align: end;
	align-items: flex-end
}

.BoxType.alignItemsCenter {
	-webkit-box-align: center;
	align-items: center
}

.BoxType.alignItemsBaseline {
	-webkit-box-align: baseline;
	align-items: baseline
}

.BoxType.alignItemsStretch {
	-webkit-box-align: stretch;
	align-items: stretch
}

.BoxType.vertical>div.FillerType, .BoxType.vertical>div.SpacerType, .BoxType.vertical>div:first-child {
	margin-top: 0
}

.BoxType>div.IconType {
	-webkit-box-flex: 0!important;
	flex: none!important
}

.BoxType>div.gravityCenter {
	-webkit-box-pack: center;
	justify-content: center
}

.BoxType>div.gravityBottom {
	-webkit-box-pack: end;
	justify-content: flex-end
}

.FlexContainer .BoxType>div.FillerType {
	-webkit-box-flex: 1;
	flex: 1 0 0
}

@media (-webkit-min-device-pixel-ratio: 1) {
	.FlexContainer .BoxType>div.FillerType {
		width: 0
	}
}

@media (-webkit-min-device-pixel-ratio: 1) and (min-width: 0.001vmax) {
	.FlexContainer .BoxType>div.FillerType {
		width: auto
	}
}

@media (min-resolution: 1dpi) {
	.FlexContainer .BoxType>div.FillerType {
		width: auto
	}
}

/* SpacerType */

.BoxType>div.SpacerType {
	-webkit-box-flex: 0;
	flex: none
}

.BoxType.horizontal>div.SpacerType {
	height: 1px
}

/* SpacerTypeSize horizontal
   xs = 2px
   sm = 4px
   md = 8px
   lg = 12px
   xl = 16px
   xxl = 20px

   How to use
   <div class="SpacerType SpacerTypeSize" style="--spacer-size-value:4px;">
 */

.BoxType.horizontal>div.SpacerType.SpacerTypeSize {
	width: var(--spacer-type-size-value);
}

.BoxType.horizontal[class="SpacerType"]>div.SpacerType+div {
	margin-left: 0
}

/* SpacerTypeSize vertical
   xs = 2px
   sm = 4px
   md = 8px
   lg = 12px
   xl = 16px
   xxl = 20px

   How to use
   <div class="SpacerType SpacerTypeSize" style="--spacer-size-value:4px;">
 */

 .BoxType.vertical>div.SpacerType.SpacerTypeSize {
	height: var(--spacer-type-size-value);
}

.BoxType[class*="SpacerType"]>div.SpacerType+div {
	margin-top: 0;
}

.BoxType.horizontal>.SeparatorType {
	align-self: stretch
}

.BoxType.vertical>div.SpacerType {
	width: 1px
}

/* Separator */

[class*="SeparatorType"] {
	-webkit-box-flex: 0!important;
	flex: none!important;
	box-sizing: content-box;
	width: 100%;
	border: 0 solid #d4d6da;
}

/* Separator Size (BoxType is vertical) */

.BoxType.vertical>div.SeparatorType.SeparatorTypeMargin {
	margin-top:  var(--separator-type-margin-value)!important;
}

/* Separator Size (BoxType is horizontal) */

.BoxType.horizontal>div.SeparatorType.SeparatorTypeMargin {
	margin-left: var(--separator-type-margin-value)!important;
}

.SeparatorType {
	position: relative;
	-webkit-box-flex: 0;
	flex: none;
}

.SeparatorType::before {
	box-sizing: content-box;
	content: "";
	display: block;
	position: absolute;
	z-index: 1;
	width: 100%;
	height: 1px;
	border: inherit;
	border-top-width: 1px;
	-webkit-transform-origin: left top;
	transform-origin: left top;
	-webkit-transform: scaleY(0.5);
	transform: scaleY(0.5)
}

.SeparatorType:last-child::before {
	margin-top: -1px;
	border-top-width: 0;
	border-bottom-width: 1px;
}

.FlexRTL .SeparatorType::before {
	-webkit-transform-origin: right top;
	transform-origin: right top
}

.BoxType.horizontal>div.SeparatorType::before {
	width: 1px;
	height: 100%;
	border-top-width: 0;
	border-left-width: 1px;
	-webkit-transform: scaleX(0.5);
	transform: scaleX(0.5)
}

.BoxType.horizontal>div.SeparatorType:last-child::before {
	margin-top: 0;
	margin-left: -1px;
	border-left-width: 0;
	border-right-width: 1px;
}

.FlexRTL .BoxType.horizontal>div.SeparatorType::before {
	border-left-width: 0;
	border-right-width: 1px;
}

.FlexRTL .BoxType.horizontal>div.SeparatorType:last-child::before {
	margin-left: 0;
	margin-right: -1px;
	border-right-width: 0;
	border-left-width: 1px;
}

/* TextType */

.TextType {
	position: relative;
}

.TextType p {
	text-overflow: ellipsis;
	overflow: hidden;
	white-space: nowrap;
}

.TextType p:empty {
	height: 1.4em;
}

.TextType.TextTypeWrap p {
	text-overflow: clip;
	word-wrap: break-word;
	white-space: normal;
}

.TextType.TextAlignStart p {
	text-align: start;
}

.TextType.TextAlignCenter p {
	text-align: center;
}

.TextType.TextAlignEnd p {
	text-align: end;
}

.TextType.GravityTop {
	-webkit-box-pack: start;
	justify-content: start;
}

.TextType.GravityCenter {
	-webkit-box-pack: center;
	justify-content: space-around;
}

.TextType.GravityEnd {
	-webkit-box-pack: end;
	justify-content: flex-end;
}

.TextType.TextTypeSize {
	font-size: var(--text-type-size-value)
}

.TextType.TextTypeMaxLine p {
	-webkit-line-clamp: var(--text-type-max-line-value);
	-webkit-box-orient: vertical;
	display: -webkit-box;
}

/* TextType Margin (BoxType is horizontal) */

.BoxType.horizontal>div.TextType.TextTypeMargin {
	margin-left: var(--text-type-margin-value)!important;
}

/* TextType Margin (BoxType is vertical) */

.BoxType.vertical>div.TextType.TextTypeMargin {
	margin-top: var(--text-type-margin-value)!important;
}


/* SpanType */

.SpanType {
	font-style: inherit;
	font-weight: inherit;
	text-decoration: inherit
}

/* SpanType Size
	xxs = 11px
	xs = 13px
	sm = 14px
	md = 16px
	lg = 19px
	xl = 22px
	xxl = 29px
	3xl = 35px
	4xl = 48px
	5xl = 74px

	 How to use
	<div class="SpanType SpanTypeSize" style="--span-size-value:13px;">
*/
.SpanType.SpanTypeSize {
	font-size: var(--span-type-size-value);
}

.IconType {
	position: relative;
}

.IconType span {
	display: inline-block;
	overflow: hidden;
	background: no-repeat center;
	background-size: contain;
	width: 1em;
	height: 1em;
	vertical-align: baseline;
}

/*  width: unit em
	example = width: 2em
*/
.IconType.IconAspectRatio span {
	width: var(--icon-aspect-ratio-value);
}

.IconType.IconSize {
	font-size: var(--icon-size-value);
}

/* Button */

.ButtonType {
	position: relative;
}

.ButtonType a {
	display: inherit;
	-webkit-box-align: center;
	align-items: center;
	-webkit-box-pack: center;
	justify-content: center;
	width: 100%;
	height: 52px;
	padding: 0 16px;
	border-radius: 8px;
	font-size: 16px;
}

.ButtonType div {
	white-space: nowrap;
	text-overflow: ellipsis;
	overflow: hidden;
	max-width: 100%;
}

.ButtonType.ButtonStylePrimary a {
	background-color: #17c950;
	color: #ffffff
}

.ButtonType.ButtonStyleSecondary a {
	background-color: #dcdfe5;
	color: #111111
}

.ButtonType.ButtonStyleLink a {
	color: #42659a
}

.ButtonType.HeightSm a {
	height: 40px
}

/* ButtonType Margin (BoxType is horizontal) */

.BoxType.horizontal>div.ButtonType.ButtonTypeMargin {
	margin-left: var(--button-type-margin-value)!important;
}

/* ButtonType Margin (BoxType is vertical) */

.BoxType.vertical>div.ButtonType.ButtonTypeMargin {
	margin-top: var(--button-type-margin-value)!important;
}

/* Image */

.ImageType {
	-webkit-box-align: center;
	align-items: center;
	overflow: hidden;
	position: relative
}

.ImageType>div {
	max-width: 100%
}

.ImageType a {
	display: block;
	position: relative;
	width: 100%
}

.ImageType span {
	display: block;
	position: absolute;
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
	overflow: hidden;
	background-repeat: no-repeat;
	background-position: center center
}

.ImageType.AspectModeFit span {
	background-size: contain
}

.ImageType.AspectModeCover span {
	background-size: cover
}

.ImageSizeFull {}

.ImageType.PositionAbsolute.ImageSizeFull {
	width: 100%
}

.PositionAbsolute {
	position: absolute;
	margin: 0!important;
	width: auto
}

.PositionRelative {
	position: relative;
	margin: 0!important;
	width: auto
}
